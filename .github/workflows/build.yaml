name: Build

on:
  pull_request:
    branches:
      - main
    paths:
      - '**/*.py'

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{matrix.os}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: 'pip'
          cache-dependency-path: |
            **/requirements.txt

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Download model file
        run: |
          mkdir model
          curl -L -o model/model_100x100.onnx https://github.com/EbinaKai/Sichiribe/releases/download/v0.1.6/model_100x100.onnx

      - name: Rename app.py to Sichiribe.py
        run: |
          mv app.py Sichiribe.py

      - name: Build for macos-latest
        if: matrix.os == 'macos-latest'
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: Sichiribe.py
          enable-plugins: pyside6
          include-module: matplotlib.backends.backend_qt5agg
          include-data-dir: |
            model=model
            gui/images=gui/images
          macos-app-name: Sichiribe
          macos-app-icon: res/Sichiribe_icon.png
          macos-app-protected-resource: "NSCameraUsageDescription:Camera access"
          mode: app

      - name: Build for ubuntu-latest, windows-latest
        if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'windows-latest' }}
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: Sichiribe.py
          enable-plugins: pyside6
          include-module: matplotlib.backends.backend_qt5agg
          include-data-dir: |
            model=model
            gui/images=gui/images
          linux-icon: res/Sichiribe_icon.png
          windows-icon-from-ico: res/Sichiribe_icon.png
          mode: onefile

      - name: Fix app bundle structure
        if: matrix.os == 'macos-latest'
        run: |
          cd build
          ls -la Sichiribe.app || true
          mkdir -p "Sichiribe.app/Contents/MacOS"
          mkdir -p "Sichiribe.app/Contents/Resources"
          if [ -d "Resources" ]; then
            cp -R Resources/* "Sichiribe.app/Contents/Resources/"
            rm -rf Resources
          fi
          if [ -f "Info.plist" ]; then
            mv "Info.plist" "Sichiribe.app/Contents/"
          fi
          chmod -R 755 "Sichiribe.app"
          codesign --force --sign - --deep "Sichiribe.app"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-Build
          path: |
            build/*.app
            build/*.bin
            build/*.exe
          include-hidden-files: true